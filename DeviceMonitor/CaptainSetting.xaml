<UserControl x:Class="DeviceMonitor.CaptainSetting"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DeviceMonitor"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="miniBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left" Margin="0 0 0 0" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" >
                                    <Setter.Value >
                                        <SolidColorBrush Color="#696969" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Margin" Value="0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Background="{TemplateBinding Background }">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                    <Rectangle x:Name="CheckBoxRectangle" Height="16" Width="16" Fill="#444444" Opacity="0.3" />
                                    <Rectangle x:Name="CheckBoxRectangleOut" Height="17" Width="17" Stroke="#C6C6C6" StrokeThickness="1" />
                                    <Grid x:Name="CheckedMark" Width="{Binding ElementName=CheckBoxRectangleOut, Path=Width}" Height="{Binding ElementName=CheckBoxRectangleOut, Path=Width}" Visibility="Collapsed">
                                        <Path SnapsToDevicePixels="False" StrokeThickness="3" Data="M1,9 L10,12" Stroke="#8E8E8E8E"/>
                                        <Path SnapsToDevicePixels="False" StrokeThickness="3" Data="M8,12 L15,4" Stroke="#8E8E8E8E"/>
                                    </Grid>
                                </Grid>
                                <TextBlock Grid.Column="1" Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent} }" VerticalAlignment="Center" Margin="8,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                                <Setter TargetName="CheckBoxRectangle" Property="Fill" Value="#FFFFFFFF"></Setter>
                                <Setter TargetName="CheckBoxRectangle" Property="Opacity" Value="1"></Setter>
                                <Setter TargetName="CheckBoxRectangleOut" Property="Stroke" Value="Transparent"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <ItemsControl Grid.Row="0" Grid.RowSpan="3" x:Name="itemsControl" Background="Blue" ItemsSource="{Binding DataContext.Capture,RelativeSource={RelativeSource AncestorType=UserControl}}" >
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel x:Name="wpnlContent" Orientation="Horizontal" Background="#ffffff">
                    </WrapPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Background="AliceBlue">
                        <StackPanel Margin="5">
                            <Grid x:Name="grdItem" Width="105" Height="55" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.7*"/>
                                    <ColumnDefinition Width="0.3*"/>
                                </Grid.ColumnDefinitions>
                                <Label Name="lblPositionName" Grid.Column="0" Height="54"  Content="{Binding PositionName}" HorizontalAlignment="Stretch" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  Background="#444444" Foreground="#d4d4d4" FontSize="18" FontFamily="Microsoft YaHe" Cursor="Arrow" MouseLeftButtonDown="TextBox_MouseLeftButtonDown" >
                                </Label>
                                <Grid  Background="#444444" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Button Grid.Row="0" Name="lblType" Content="{Binding TypeName}" Background="#696969" Foreground="#d4d4d4"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                            FontSize="12" FontFamily="Microsoft YaHe" Margin="0 2 0 0" Command="{Binding DataContext.MouseLeftClickItem, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, Mode=FindAncestor}}"
                                                       CommandParameter="{Binding}" Style="{StaticResource miniBtnStyle}">

                                    </Button>
                                    <Button Grid.Row="1" Content="{Binding PlanePlace}" Background="#696969" Foreground="#d4d4d4" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="12" FontFamily="Microsoft YaHe" Margin="0 2 0 0"
                                           Command="{Binding DataContext.PositionClick, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, Mode=FindAncestor}}"
                                                       CommandParameter="{Binding}" Style="{StaticResource miniBtnStyle}"></Button>
                                    <Popup Grid.Row="0"  x:Name="Pop_menu" HorizontalOffset="5" PopupAnimation="Fade" Width="72" Height="90" PlacementTarget="{Binding ElementName=lblType}" Placement="Right" AllowsTransparency="True"  Margin="0 8 0 0"  StaysOpen="False" IsOpen="{Binding DataContext.IsOpenPop ,RelativeSource={RelativeSource AncestorType=Grid}, Mode=TwoWay}">
                                        <!-- -->
                                        <ScrollViewer    Width="900" Name="srlvUpdate2" VerticalAlignment="Top" HorizontalAlignment="Stretch" Visibility="Visible">
                                            <ItemsControl  Name="itmUpdate" ItemsSource="{Binding DataContext.CheckItems,RelativeSource={RelativeSource AncestorType=ItemsControl}}" >
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Vertical"  Background="#262626"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <CheckBox Content="{Binding ItemName}" Foreground="#C6C6C6" BorderBrush="#C6C6C6" IsChecked="{Binding IsChecked}" Style="{StaticResource CheckBoxStyle}" Background="#424242" Margin="2"></CheckBox>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </Popup>

                                </Grid>
                            </Grid>
                        </StackPanel>

                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelect}" Value="True">
                            <Setter TargetName="lblPositionName" Property="Background" Value="#409ff9"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>
